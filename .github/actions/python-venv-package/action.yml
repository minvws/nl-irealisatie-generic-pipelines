name: "Python venv packager"
description: "Exports a Python venv package with the needed requirements installed"
inputs:
  python_version:
    description: "Python version"
    required: true
  package_file_name:
    description: "Name of the package"
    required: true

runs:
  using: "composite"
  steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Check if poetry.lock file exists
        id: check_poetry_file
        run: |
          if [ -f "poetry.lock" ]; then
            echo "File exists"
            echo "::set-output name=file_exists::true"
          else
            echo "File does not exist"
            echo "::set-output name=file_exists::false"
          fi

      - name: Export requirements (when Poetry)
        if: steps.check_poetry_file.outputs.file_exists == 'true'
        run: |
          pip3 install poetry
          poetry self add poetry-plugin-export
          poetry export > requirements.txt 

      - name: Create venv
        run: |
          python -m venv .venv
          . .venv/bin/activate          
          pip install -r requirements.txt

      - name: Fix python3 symlink - back to default location
        run: cd .venv/bin && rm python3 python && ln -s /usr/bin/python3 python3 && ln -s /usr/bin/python python

      - name: Add version file
        run: 'echo "{ \"version\": \"${{ env.RELEASE_VERSION }}\", \"git_ref\": \"$GITHUB_SHA\"}" > .venv/version.json'

      - name: Create archive
        run: tar -czf ${{ inputs.package_file_name }}_venv_${{ env.RELEASE_VERSION }}_python${{ matrix.python_version }}.tar.gz .venv

      - name: Upload venv tar
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.package_file_name }}_venv_${{ env.RELEASE_VERSION }}_python${{ matrix.python_version }}
          path: ${{ inputs.package_file_name }}_venv_${{ env.RELEASE_VERSION }}_python${{ matrix.python_version }}.tar.gz
